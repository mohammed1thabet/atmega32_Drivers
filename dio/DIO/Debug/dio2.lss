
dio2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000023a  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  0000023a  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000078  00000000  00000000  00000269  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000e71  00000000  00000000  000002e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000063c  00000000  00000000  00001152  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003ab  00000000  00000000  0000178e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000b8  00000000  00000000  00001b3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000204  00000000  00000000  00001bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000013a  00000000  00000000  00001df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000058  00000000  00000000  00001f32  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000001e2  000001e2  00000236  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001f8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.DIO_Port_Init 00000006  000001d0  000001d0  00000224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.DIO_Pin_Init 0000003a  00000140  00000140  00000194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_Read_Port 00000006  000001d6  000001d6  0000022a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.DIO_Read_Pin 0000001c  000001b4  000001b4  00000208  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.DIO_Write_Port 00000006  000001dc  000001dc  00000230  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.DIO_Write_Pin 0000003a  0000017a  0000017a  000001ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    000000d4  0000006c  0000006c  000000c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
   8:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
   c:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  10:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  14:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  18:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  1c:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  20:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  24:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  28:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  2c:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  30:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  34:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  38:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  3c:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  40:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  44:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  48:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  4c:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>
  50:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <_etext>
  64:	0c 94 34 00 	jmp	0x68	; 0x68 <_exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

000001e2 <__bad_interrupt>:
 1e2:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_Port_Init:

000001d0 <DIO_Port_Init>:
	CLEAR_BIT(SFIOR,2);
	SET_BIT(Portx->PORTx,Pin_Number);
	
	}
	else if(PU_State== PULL_UP_DISABLE)
	CLEAR_BIT(Portx->PORTx,Pin_Number);
 1d0:	fc 01       	movw	r30, r24
 1d2:	61 83       	std	Z+1, r22	; 0x01
 1d4:	08 95       	ret

Disassembly of section .text.DIO_Pin_Init:

00000140 <DIO_Pin_Init>:
 140:	61 11       	cpse	r22, r1
 142:	0d c0       	rjmp	.+26     	; 0x15e <DIO_Pin_Init+0x1e>
 144:	fc 01       	movw	r30, r24
 146:	51 81       	ldd	r21, Z+1	; 0x01
 148:	21 e0       	ldi	r18, 0x01	; 1
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_Pin_Init+0x12>
 14e:	22 0f       	add	r18, r18
 150:	33 1f       	adc	r19, r19
 152:	4a 95       	dec	r20
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_Pin_Init+0xe>
 156:	20 95       	com	r18
 158:	25 23       	and	r18, r21
 15a:	21 83       	std	Z+1, r18	; 0x01
 15c:	08 95       	ret
 15e:	61 30       	cpi	r22, 0x01	; 1
 160:	59 f4       	brne	.+22     	; 0x178 <DIO_Pin_Init+0x38>
 162:	fc 01       	movw	r30, r24
 164:	51 81       	ldd	r21, Z+1	; 0x01
 166:	21 e0       	ldi	r18, 0x01	; 1
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	02 c0       	rjmp	.+4      	; 0x170 <DIO_Pin_Init+0x30>
 16c:	22 0f       	add	r18, r18
 16e:	33 1f       	adc	r19, r19
 170:	4a 95       	dec	r20
 172:	e2 f7       	brpl	.-8      	; 0x16c <DIO_Pin_Init+0x2c>
 174:	25 2b       	or	r18, r21
 176:	21 83       	std	Z+1, r18	; 0x01
 178:	08 95       	ret

Disassembly of section .text.DIO_Read_Port:

000001d6 <DIO_Read_Port>:
}

uint8_t DIO_Read_Port(DIO_Port_st* Portx)
{
	return(Portx->PINx);
 1d6:	fc 01       	movw	r30, r24
 1d8:	80 81       	ld	r24, Z
}
 1da:	08 95       	ret

Disassembly of section .text.DIO_Read_Pin:

000001b4 <DIO_Read_Pin>:
	CLEAR_BIT(SFIOR,2);
	SET_BIT(Portx->PORTx,Pin_Number);
	
	}
	else if(PU_State== PULL_UP_DISABLE)
	CLEAR_BIT(Portx->PORTx,Pin_Number);
 1b4:	68 30       	cpi	r22, 0x08	; 8
 1b6:	50 f4       	brcc	.+20     	; 0x1cc <DIO_Read_Pin+0x18>
 1b8:	fc 01       	movw	r30, r24
 1ba:	80 81       	ld	r24, Z
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_Read_Pin+0x10>
 1c0:	95 95       	asr	r25
 1c2:	87 95       	ror	r24
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_Read_Pin+0xc>
 1c8:	81 70       	andi	r24, 0x01	; 1
 1ca:	08 95       	ret
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	08 95       	ret

Disassembly of section .text.DIO_Write_Port:

000001dc <DIO_Write_Port>:
	return 0;
}

void DIO_Write_Port(DIO_Port_st* Portx,uint8_t Val)
{
	Portx->PORTx=(uint8_t) Val;
 1dc:	fc 01       	movw	r30, r24
 1de:	62 83       	std	Z+2, r22	; 0x02
 1e0:	08 95       	ret

Disassembly of section .text.DIO_Write_Pin:

0000017a <DIO_Write_Pin>:
	CLEAR_BIT(SFIOR,2);
	SET_BIT(Portx->PORTx,Pin_Number);
	
	}
	else if(PU_State== PULL_UP_DISABLE)
	CLEAR_BIT(Portx->PORTx,Pin_Number);
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	61 f4       	brne	.+24     	; 0x196 <DIO_Write_Pin+0x1c>
 17e:	fc 01       	movw	r30, r24
 180:	42 81       	ldd	r20, Z+2	; 0x02
 182:	21 e0       	ldi	r18, 0x01	; 1
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_Write_Pin+0x12>
 188:	22 0f       	add	r18, r18
 18a:	33 1f       	adc	r19, r19
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_Write_Pin+0xe>
 190:	24 2b       	or	r18, r20
 192:	22 83       	std	Z+2, r18	; 0x02
 194:	08 95       	ret
 196:	41 11       	cpse	r20, r1
 198:	0c c0       	rjmp	.+24     	; 0x1b2 <DIO_Write_Pin+0x38>
 19a:	fc 01       	movw	r30, r24
 19c:	42 81       	ldd	r20, Z+2	; 0x02
 19e:	21 e0       	ldi	r18, 0x01	; 1
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DIO_Write_Pin+0x2e>
 1a4:	22 0f       	add	r18, r18
 1a6:	33 1f       	adc	r19, r19
 1a8:	6a 95       	dec	r22
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <DIO_Write_Pin+0x2a>
 1ac:	20 95       	com	r18
 1ae:	24 23       	and	r18, r20
 1b0:	22 83       	std	Z+2, r18	; 0x02
 1b2:	08 95       	ret

Disassembly of section .text.main:

0000006c <main>:
#include "DIO_Conf.h"

int main(void)
{
	uint32_t i=0;
	DIO_Port_Init(DIOA,0x00);
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	89 e3       	ldi	r24, 0x39	; 57
  70:	90 e0       	ldi	r25, 0x00	; 0
  72:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <DIO_Port_Init>
	DIO_Port_Init(DIOB,0xff);
  76:	6f ef       	ldi	r22, 0xFF	; 255
  78:	86 e3       	ldi	r24, 0x36	; 54
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <DIO_Port_Init>
	DIO_Port_Init(DIOC,0xff);
  80:	6f ef       	ldi	r22, 0xFF	; 255
  82:	83 e3       	ldi	r24, 0x33	; 51
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <DIO_Port_Init>
	DIO_Pin_Init(DIOD,INPUT,0);
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	60 e0       	ldi	r22, 0x00	; 0
  8e:	80 e3       	ldi	r24, 0x30	; 48
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	0e 94 a0 00 	call	0x140	; 0x140 <DIO_Pin_Init>
   	DIO_Pin_Init(DIOD,OUTPUT,5);
  96:	45 e0       	ldi	r20, 0x05	; 5
  98:	61 e0       	ldi	r22, 0x01	; 1
  9a:	80 e3       	ldi	r24, 0x30	; 48
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	0e 94 a0 00 	call	0x140	; 0x140 <DIO_Pin_Init>
	   
    while(1)
    {
		
		//DIO_Write_Pin(&DIOA,2,HIGH);
	    DIO_Write_Port(DIOB,0b01011110);
  a2:	6e e5       	ldi	r22, 0x5E	; 94
  a4:	86 e3       	ldi	r24, 0x36	; 54
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_Write_Port>
		DIO_Write_Port(DIOC , DIO_Read_Port(DIOA) );
  ac:	89 e3       	ldi	r24, 0x39	; 57
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <DIO_Read_Port>
  b4:	68 2f       	mov	r22, r24
  b6:	83 e3       	ldi	r24, 0x33	; 51
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_Write_Port>
		DIO_Write_Pin(DIOD,5,DIO_Read_Pin(DIOD,0));
  be:	60 e0       	ldi	r22, 0x00	; 0
  c0:	80 e3       	ldi	r24, 0x30	; 48
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_Read_Pin>
  c8:	48 2f       	mov	r20, r24
  ca:	65 e0       	ldi	r22, 0x05	; 5
  cc:	80 e3       	ldi	r24, 0x30	; 48
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_Write_Pin>
	    for(i=0;i<1000000;i++);
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	dc 01       	movw	r26, r24
  da:	03 c0       	rjmp	.+6      	; 0xe2 <main+0x76>
  dc:	01 96       	adiw	r24, 0x01	; 1
  de:	a1 1d       	adc	r26, r1
  e0:	b1 1d       	adc	r27, r1
  e2:	80 34       	cpi	r24, 0x40	; 64
  e4:	22 e4       	ldi	r18, 0x42	; 66
  e6:	92 07       	cpc	r25, r18
  e8:	2f e0       	ldi	r18, 0x0F	; 15
  ea:	a2 07       	cpc	r26, r18
  ec:	b1 05       	cpc	r27, r1
  ee:	b0 f3       	brcs	.-20     	; 0xdc <main+0x70>
		//DIO_Write_Pin(&DIOA,2,LOW);
	    DIO_Write_Port(DIOB, ~(0b01011110));
  f0:	61 ea       	ldi	r22, 0xA1	; 161
  f2:	86 e3       	ldi	r24, 0x36	; 54
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_Write_Port>
	    DIO_Write_Port(DIOC , DIO_Read_Port(DIOA) );
  fa:	89 e3       	ldi	r24, 0x39	; 57
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <DIO_Read_Port>
 102:	68 2f       	mov	r22, r24
 104:	83 e3       	ldi	r24, 0x33	; 51
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_Write_Port>
	    DIO_Write_Pin(DIOD,5,DIO_Read_Pin(DIOD,0));
 10c:	60 e0       	ldi	r22, 0x00	; 0
 10e:	80 e3       	ldi	r24, 0x30	; 48
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_Read_Pin>
 116:	48 2f       	mov	r20, r24
 118:	65 e0       	ldi	r22, 0x05	; 5
 11a:	80 e3       	ldi	r24, 0x30	; 48
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_Write_Pin>
		for(i=0;i<1000000;i++);
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	dc 01       	movw	r26, r24
 128:	03 c0       	rjmp	.+6      	; 0x130 <main+0xc4>
 12a:	01 96       	adiw	r24, 0x01	; 1
 12c:	a1 1d       	adc	r26, r1
 12e:	b1 1d       	adc	r27, r1
 130:	80 34       	cpi	r24, 0x40	; 64
 132:	22 e4       	ldi	r18, 0x42	; 66
 134:	92 07       	cpc	r25, r18
 136:	2f e0       	ldi	r18, 0x0F	; 15
 138:	a2 07       	cpc	r26, r18
 13a:	b1 05       	cpc	r27, r1
 13c:	b0 f3       	brcs	.-20     	; 0x12a <main+0xbe>
 13e:	b1 cf       	rjmp	.-158    	; 0xa2 <main+0x36>
